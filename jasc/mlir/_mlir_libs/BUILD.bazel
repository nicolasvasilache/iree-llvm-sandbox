load("@pybind11_bazel//:build_defs.bzl", "pybind_extension")
load("@jax//jaxlib:symlink_files.bzl", "symlink_inputs")

package(
    # default_applicable_licenses = ["//third_party/mlir_edge:license"],
    default_visibility = ["//visibility:public"],
)

pybind_extension(
    name = "_mlir",
    srcs = [
        "@llvm-project//mlir:lib/Bindings/Python/MainModule.cpp",
    ],
    deps = [
        ":jaxlib_mlir_capi_shared_library",
        "@llvm-project//mlir:MLIRBindingsPythonCoreNoCAPI",
        "@llvm-project//mlir:MLIRBindingsPythonHeaders",
    ],
)

pybind_extension(
    name = "_mlirDialectsSparseTensor",
    srcs = [
        "@llvm-project//mlir:lib/Bindings/Python/DialectSparseTensor.cpp",
    ],
    deps = [
        ":jaxlib_mlir_capi_shared_library",
        "@llvm-project//mlir:CAPIIRHeaders",
        "@llvm-project//mlir:CAPISparseTensorHeaders",
        "@llvm-project//mlir:MLIRBindingsPythonHeaders",
    ],
)

pybind_extension(
    name = "_mlirDialectsTransform",
    srcs = [
        "@llvm-project//mlir:lib/Bindings/Python/DialectTransform.cpp",
    ],
    deps = [
        ":jaxlib_mlir_capi_shared_library",
        "@llvm-project//mlir:CAPIIRHeaders",
        "@llvm-project//mlir:CAPITransformDialect",
        "@llvm-project//mlir:MLIRBindingsPythonHeadersAndDeps",
    ],
)

pybind_extension(
    name = "_mlirSparseTensorPasses",
    srcs = [
        "@llvm-project//mlir:lib/Bindings/Python/SparseTensorPasses.cpp",
    ],
    deps = [
        ":jaxlib_mlir_capi_shared_library",
        "@llvm-project//mlir:CAPISparseTensorHeaders",
    ],
)

symlink_inputs(
    name = "_mlir_libs",
    rule = py_library,
    symlinked_inputs = {"srcs": {
        ".": [
            "@llvm-project//mlir/python:MlirLibsPyFiles",
        ],
    }},
    deps = [
        ":_mlir",
        ":_site_initialize_0",
    ],
)

# JAX-specific registrations.
pybind_extension(
    name = "_site_initialize_0",
    srcs = ["_site_initialize_0.cc"],
    deps = [
        ":jax_dialects_capi_headers",
        ":jaxlib_mlir_capi_shared_library",
        "@llvm-project//mlir:CAPIArithHeaders",
        "@llvm-project//mlir:CAPIIRHeaders",
        "@llvm-project//mlir:CAPIMathHeaders",
        "@llvm-project//mlir:CAPIMemRefHeaders",
        "@llvm-project//mlir:CAPITransformsHeaders",
        "@llvm-project//mlir:CAPIVectorHeaders",
        "@llvm-project//mlir:MLIRBindingsPythonHeaders",
        "@local_config_python//:headers",
    ],
)

##---------------------------------------------------------------------------##
# Stablehlo Extensions
##---------------------------------------------------------------------------##

# pybind_extension(
#     name = "_stablehlo",
#     srcs = [
#         "@stablehlo//:stablehlo/integrations/python/PortableApi.cpp",
#         "@stablehlo//:stablehlo/integrations/python/PortableApi.h",
#         "@stablehlo//:stablehlo/integrations/python/StablehloModule.cpp",
#     ],
#     copts = COPTS,
#     linkopts = LINKOPTS,
#     deps = [
#         ":jaxlib_mlir_capi_shared_library",
#         "@llvm-project//mlir:CAPIIRHeaders",
#         "@llvm-project//mlir:MLIRBindingsPythonHeaders",
#         "@local_config_python//:headers",
#         "@pybind11",
#         "@stablehlo//:stablehlo_capi_headers",
#         "@stablehlo//:stablehlo_portable_api",
#         "@stablehlo//:stablehlo_serialization",
#     ],
# )

# Shared C++ extension library

cc_library(
    name = "jaxlib_mlir_capi_shared_library",
    srcs = [":libjaxlib_mlir_capi.so"]
)

cc_library(
    name = "jax_dialects_capi",
    srcs = ["jax_dialects.cc"],
    hdrs = ["jax_dialects.h"],
    deps = [
        "@llvm-project//mlir:CAPIIRHeaders",
        "@llvm-project//mlir:SCFDialect",
    ],
    alwayslink = 1,
)

cc_library(
    name = "jax_dialects_capi_headers",
    hdrs = ["jax_dialects.h"],
    deps = [
        "@llvm-project//mlir:CAPIIRHeaders",
    ],
)

cc_library(
    name = "jaxlib_mlir_capi_objects",
    deps = [
        ":jax_dialects_capi",
        "@llvm-project//mlir:CAPIArithObjects",
        "@llvm-project//mlir:CAPIMathObjects",
        "@llvm-project//mlir:CAPIMemRefObjects",
        "@llvm-project//mlir:CAPISparseTensorObjects",
        "@llvm-project//mlir:CAPITransformsObjects",
        "@llvm-project//mlir:CAPIVectorObjects",
        "@llvm-project//mlir:MLIRBindingsPythonCAPIObjects",
        "@stablehlo//:stablehlo_capi_objects",
    ],
)

cc_binary(
    name = "libjaxlib_mlir_capi.so",
    linkopts = [
        "-Wl,-soname=libjaxlib_mlir_capi.so",
        "-Wl,-rpath='$$ORIGIN'",
    ],
    linkshared = 1,
    deps = [":jaxlib_mlir_capi_objects"],
)
